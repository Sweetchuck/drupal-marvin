
marvin:

  ##
  # Name of the current environment.
  #
  # Allowed (recommended) values: "dev", "prod", "ci".
  # @todo Check that this config is really used somewhere or not.
  #
  # @var string
  ##
  environment: 'local'

  ##
  # Name of the directory where the generated artifacts should be stored.
  #
  # Relative directory path from the project root.
  #
  # @var string
  ##
  artifactDir: 'artifacts'

  ##
  # Path to a directory where every release artifact should be stored.
  #
  # @var string
  ##
  buildDir: '../../../artifacts'

  ##
  # Name of the directory where every build log should be stored.
  #
  # Relative directory path from the project root.
  #
  # @var string
  ##
  reportsDir: 'reports'

  ##
  # Name of the git hook the Drush command was triggered by.
  # For example "pre-commit".
  #
  # @var null|string
  ##
  gitHookName: null

  ##
  # @todo
  #
  # @var null|string
  ##
  ci: null

  ##
  # @var string
  ##
  composerExecutable: 'composer'

  ##
  # Path to the "git" executable.
  #
  # @var string
  ##
  gitExecutable: 'git'

  php:
    ##
    # Key is a file name extension, value indicates that it is enabled or not.
    #
    # @var bool[]
    ##
    extension:
      profile: true
      module: true
      theme: true
      engine: true
      install: true
      php: true
      inc: true

    ##
    # Keys are custom.
    #
    # However keys are custom,
    # currently the PHP version detection is based on the key.
    # So it has to be provided in the following format:
    # {PHP_VERSION_ID}-(zts|nts)
    #
    # Examples: 70102-zts or 70303-nts
    #
    # @todo Improve phpVariant version detection.
    #
    # @var array
    ##
    variant:
      min:
        ##
        # Same as the key in the marvin.php.variant.
        #
        # Automatically populated.
        #
        # @var string
        ##
        id: 'min'

        ##
        # @todo
        #
        # @var bool
        ##
        enabled: true

        ##
        # @todo
        #
        # @var string
        ##
        binDir: '/usr/bin'

        command:
          ##
          # Keys are environment variable names.
          #
          # @var array
          ##
          envVar:
            ##
            # @var null|string
            ##
            PHPRC: ''
            PHP_INI_SCAN_DIR: ''
          ##
          # @var string
          ##
          executable: >
            ${marvin.php.variant.min.binDir}/php
            -d 'extension=pcov'

  lint:
    ##
    # Keys are custom.
    #
    # @var array
    ##
    reporterCombination:
      ##
      # Keys are come from "../reporterConfig" configuration.
      #
      # @var bool[]
      ##
      local:
        verboseStdOutput: true
      localPreCommit:
        verboseStdOutput: true
      watch:
        verboseStdOutput: true
      ci:
        # @todo summaryStdOutput.
        # @todo checkstyleFile.
        verboseStdOutput: true
    reporterConfig:
      verboseStdOutput:
        service: 'lintVerboseReporter'

        ##
        # Available options are depend on the "service".
        #
        # The following options are available for \Sweetchuck\LintReport\Reporter\VerboseReporter.
        #
        # @var array
        ##
        options:
          filePathStyle: 'relative'
          #showSeverity: true
          #showSource: false
          #showLineNumber: true
          #showColumnNumber: false
          #showMessage: true

  ##
  # Keys are the official Git hook names.
  #
  # @var array
  ##
  gitHook:
    commit-msg:
      rules: {}
        #customKey01:
          ##
          # @var bool
          ##
          #enabled: true

          ##
          # This will be auto-populated from the array key.
          #
          # @var string
          ##
          #name: 'customKey01'

          ##
          # RegExp pattern. Required.
          #
          # @var string
          ##
          #pattern: "/^.+$/u"

          ##
          # Human readable description.
          #
          # @var string
          ##
          #description: 'Lorem ipsum.'

          ##
          # The key is an example for a valid commit message.
          #
          # @var bool[]
          ##
          #examples:
          #  'Issue #42 - Something': true
