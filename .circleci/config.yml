version: 2.1

.env_composer: &env_composer
  COMPOSER_NO_INTERACTION: '1'
  COMPOSER_MEMORY_LIMIT: '-1'
  COMPOSER_DISABLE_XDEBUG_WARN: '1'

.env_test: &env_test
  SIMPLETEST_BASE_URL: 'http://localhost:8888'
  DTT_BASE_URL: 'http://localhost:8888'
  SIMPLETEST_DB: 'sqlite://sites/default/db.default.default.sqlite'
  UNISH_DB_URL: 'sqlite://sites/default/db.default.default.sqlite'
  UNISH_NO_TIMEOUTS: 'y'

orbs:
  codecov: 'codecov/codecov@1.0.4'

executors:
  php704:
    environment:
      <<: *env_composer
      <<: *env_test

    docker:
      -
        name: 'main'
        image: 'misterio92/ci-php-node:4.0'

  php703:
    environment:
      <<: *env_composer
      <<: *env_test

    docker:
      -
        name: 'main'
        image: 'misterio92/ci-php-node:3.0'

  php702:
    environment:
      <<: *env_composer
      <<: *env_test

    docker:
      -
        name: 'main'
        image: 'misterio92/ci-php-node:2.0'

commands:
  install_yarn:
    description: 'Install "yarn" NPM package'
    steps:
      -
        run:
          name: 'Install Yarn'
          command: 'npm install -g yarn@1.15.2'

  install_php_requirements:
    description: ''
    steps:
      -
        run:
          name: 'Install required PHP extensions'
          command: |
            apt-get update
            apt-get install -y \
              php-xdebug \
              "php$(php -r 'echo mb_substr(PHP_VERSION, 0, 3);')-phpdbg"

  composer_install:
    description: 'Install Composer dependencies with cache restore and save'
    steps:
      -
        restore_cache:
          name: 'Composer - cache restore'
          keys:
            - 'composer-{{ checksum "./composer.lock" }}-v1'
      -
        run:
          name: 'Composer - install'
          command: >
            [[ -d "$(composer config vendor-dir)" ]] || composer install --no-progress
      -
        run:
          name: 'Composer - run post-install-cmd'
          command: >
            composer run post-install-cmd
      -
        save_cache:
          name: 'Composer - cache save'
          key: 'composer-{{ checksum "./composer.lock" }}-v1'
          paths:
            - './bin/'
            - './tests/fixtures/project_01/docroot/core'
            - './tests/fixtures/project_01/docroot/libraries'
            - './tests/fixtures/project_01/docroot/modules/contrib'
            - './tests/fixtures/project_01/docroot/themes/contrib'
            - './tests/fixtures/project_01/drush/contrib'
            - './vendor/'

  lint:
    description: 'Run linters'
    steps:
      -
        run:
          name: 'Run linters'
          command: 'bin/robo lint'

  test:
    description: 'Run tests'
    steps:
      -
        run:
          name: 'Run tests - Unit'
          command: 'bin/robo test:phpunit Unit'
      -
        codecov/upload:
          flags: 'unit'
          file: './reports/machine/coverage/coverage.unit.xml'
      -
        run:
          name: 'Run tests - Integration'
          command: |
            cd tests/fixtures/project_01/docroot
            php -S localhost:8888 .ht.router.php 1>/dev/null 2>/dev/null &
            cd ../../../..
            bin/robo test:phpunit Integration
      -
        codecov/upload:
          flags: 'integration'
          file: './reports/machine/coverage/coverage.integration.xml'
      -
        store_test_results:
          name: 'Store unit test results'
          path: './reports/machine/unit'

jobs:
  build:
    executor: 'php702'
    working_directory: '~/repo'
    steps:
      - 'checkout'
      - 'composer_install'
  lint:
    executor: 'php702'
    working_directory: '~/repo'
    steps:
      - 'checkout'
      - 'composer_install'
      - 'lint'
  test_php704:
    executor: 'php704'
    working_directory: '~/repo'
    steps: &test_steps
      - 'checkout'
      - 'install_yarn'
      - 'install_php_requirements'
      - 'composer_install'
      - 'test'
  test_php703:
    executor: 'php703'
    working_directory: '~/repo'
    steps:
      #<<: *test_steps
      - 'checkout'
      - 'install_yarn'
      - 'install_php_requirements'
      - 'composer_install'
      - 'test'
  test_php702:
    executor: 'php702'
    working_directory: '~/repo'
    steps:
      # <<: *test_steps
      - 'checkout'
      - 'install_yarn'
      - 'install_php_requirements'
      - 'composer_install'
      - 'test'

workflows:
  lint_and_test:
    jobs:
      -
        build: {}
      -
        lint:
          requires:
            - build
      -
        test_php704:
          requires:
            - build
      -
        test_php703:
          requires:
            - build
      -
        test_php702:
          requires:
            - build
